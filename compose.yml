# For local development only. Ports are exposed to host machine. No reverse-proxy.

# Run docker compose.
#   docker compose up
# To stop and remove compose created items
#   docker compose down --rmi "all" --volumes

services:
  redis:
    image: "redis:7.2.3-alpine"
    ############## Redis ACL ##############
    # volumes:
    #   - ./redis/users.acl:/usr/local/etc/redis/users.acl
    # command: redis-server --aclfile /usr/local/etc/redis/users.acl
    # # command: ["redis-server", "--aclfile", "/usr/local/etc/redis/users.acl"]
    ############## Redis ACL ##############
    restart: always
    networks:
      - redisnet
    ports:
      - "6379:6379"

  app:
    build:
      context: .
      # dockerfile: Dockerfile
      dockerfile: onlybackend.Dockerfile
    restart: unless-stopped  
    depends_on:
      - redis
    environment:
      # Load from .env file in same directory as the compose file. 
      # To create file, in CLI: echo "REDIS_CONNSTR=redis://redis:6379/0" > .env
      # DO NOT create file from Windows. It creates Unicode text, UTF-16, little-endian text, with CRLF line terminators.
      - REDIS_CONNSTR=${REDIS_CONNSTR}  
      # Default Redis (No Auth or ACL). Outside docker - redis://localhost:6379/0
      # - REDIS_CONNSTR=redis://redis:6379/0 
      # Using Redis ACL with Username & Password. Outside docker - redis://app-user:mysecretpassword@localhost:6379/0
      # - REDIS_CONNSTR=redis://app-user:mysecretpassword@redis:6379/0
    networks:
      - redisnet
    ports:
      - "8080:8080"   

networks:
  redisnet:
    name: redisnet