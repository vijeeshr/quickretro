# With reverse-proxy. Access only with https://localhost.

# Run docker compose.
#   docker compose -f compose.demohosting.yml up
# To stop and remove compose created items
#   docker compose -f compose.demohosting.yml down --rmi "all" --volumes

services:
  redis:
    image: "redis:7.2.3-alpine"
    ############## Redis ACL ##############
    # volumes:
    #   - ./redis/users.acl:/usr/local/etc/redis/users.acl
    # command: redis-server --aclfile /usr/local/etc/redis/users.acl
    # # command: ["redis-server", "--aclfile", "/usr/local/etc/redis/users.acl"]
    ############## Redis ACL ##############    
    restart: always
    networks:
      - redisnet
    # ports:
    #   - "6379:6379"
    expose:
      - 6379

  app:
    image: "vijeesh82/quickretro-app"
    restart: unless-stopped  
    depends_on:
      - redis
    environment:
      # Load from .env file in same directory as the compose file. 
      # To create file, in CLI: echo "REDIS_CONNSTR=redis://redis:6379/0" > .env
      # DO NOT create file from Windows. It creates Unicode text, UTF-16, little-endian text, with CRLF line terminators.
      - REDIS_CONNSTR=${REDIS_CONNSTR}  
      # Default Redis (No Auth or ACL). Outside docker - redis://localhost:6379/0
      # - REDIS_CONNSTR=redis://redis:6379/0 
      # Using Redis ACL with Username & Password. Outside docker - redis://app-user:mysecretpassword@localhost:6379/0
      # - REDIS_CONNSTR=redis://app-user:mysecretpassword@redis:6379/0
    networks:
      - redisnet
      - proxynet
    # ports:
    #   - "8080:8080"
    expose:
      - 8080

  # secretnoteapp:
  #   image: "vijeesh82/secretnote-app"
  #   restart: unless-stopped  
  #   depends_on:
  #     - redis
  #   environment:
  #     - REDIS_CONNSTR=redis://redis:6379/0  # Default Redis (No Auth or ACL). Outside docker - redis://localhost:6379/0
  #     ############## Redis ACL ##############
  #     # - REDIS_CONNSTR=redis://app-user:mysecretpassword@redis:6379/0  # Using ACL with Username & Password. Outside docker - redis://app-user:mysecretpassword@localhost:6379/0
  #     ############## Redis ACL ##############
  #   networks:
  #     - redisnet
  #     - proxynet
  #   # ports:
  #   #   - "8085:8085"
  #   expose:
  #     - 8085     

  caddy:
    image: caddy:2.7.6-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    depends_on:
      - app
    networks:
      - proxynet          
    volumes:
      - ./Caddyfile.demohosting:/etc/caddy/Caddyfile
      - ./homepage:/var/www/homepage
      - ./site:/srv
      - caddy_data:/data
      - caddy_config:/config

volumes:
  caddy_data:
  caddy_config:      

networks:
  redisnet:
    name: redisnet
  proxynet:
    name: proxynet
    # external: true