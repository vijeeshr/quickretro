import{_ as i,c as e,o as a,ae as t}from"./chunks/framework.CTVYQtO4.js";const k=JSON.parse('{"title":"Configurations","description":"","frontmatter":{},"headers":[],"relativePath":"guide/configurations.md","filePath":"guide/configurations.md","lastUpdated":1757066112000}'),n={name:"guide/configurations.md"};function l(o,s,h,p,d,r){return a(),e("div",null,s[0]||(s[0]=[t(`<h1 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h1><p>The application&#39;s default behaviour can be altered with configuration settings. This document provides a quick overview about it.</p><h2 id="auto-delete-duration" tabindex="-1">Auto-Delete Duration <a class="header-anchor" href="#auto-delete-duration" aria-label="Permalink to &quot;Auto-Delete Duration&quot;">​</a></h2><p>By default, data is deleted within 2 days in Redis. This can be updated by making the below changes.<br> In the <code>src/config.toml</code> file, update the value for <code>auto_delete_duration</code></p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Format: &lt;number&gt;&lt;unit&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Units: s=seconds, m=minutes, h=hours, d=days</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Examples: &quot;50s&quot; for 50 seconds, &quot;5m&quot; for 5 minutes, &quot;2h&quot; for 2 hours, &quot;7d&quot; for 7 days</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">auto_delete_duration = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2d&quot;</span></span></code></pre></div><h2 id="websocket-max-message-size" tabindex="-1">Websocket Max Message Size <a class="header-anchor" href="#websocket-max-message-size" aria-label="Permalink to &quot;Websocket Max Message Size&quot;">​</a></h2><p>QuickRetro uses Websockets for communication. This configuration setting controls the max allowed size in bytes for all data sent through the websocket.</p><p>In the <code>src/config.toml</code> file, update the value for <code>max_message_size_bytes</code></p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">websocket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Maximum message size (in bytes) allowed from peer for the websocket connection</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For the front-end validation, keep the same value in (src/frontend/.env [VITE_MAX_WEBSOCKET_MESSAGE_SIZE_BYTES])</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">max_message_size_bytes = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span></span></code></pre></div><p>This setting is defined separately for the backend and frontend. For the frontend, this is defined in <code>src/frontend/.env</code>.<br> Update the value for <code>VITE_MAX_WEBSOCKET_MESSAGE_SIZE_BYTES</code></p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_WS_PROTOCOL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=wss</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_SHOW_CONSOLE_LOGS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Triggers message size validation.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># It is recommended to keep the same value as what&#39;s allowed in backend server (defined in src/config.toml [websocket].max_message_size_bytes).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># To avoid message size validation, comment out below line. However, this will break the server websocket connection when the limit is breached.</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_MAX_WEBSOCKET_MESSAGE_SIZE_BYTES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=1024</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">IMPORTANT</p><p>Ensure the config values are same for both frontend and backend</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>VITE_MAX_WEBSOCKET_MESSAGE_SIZE_BYTES</code> also causes UI validation to run everytime a User type&#39;s or paste&#39;s text.<br> Commenting it out will stop the validation from being run everytime.<br> It is not recommended to comment out this config, unless its causing issues for users.</p></div><h2 id="allowed-origins" tabindex="-1">Allowed Origins <a class="header-anchor" href="#allowed-origins" aria-label="Permalink to &quot;Allowed Origins&quot;">​</a></h2><p>Update the <code>allowed_origins</code> config setting in <code>src/config.toml</code> to add some degree of protection to the websocket connection.<br> You will typically update this setting when <a href="./self-hosting">self-hosting</a>.</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># When self-hosting, add your domain to allowed_origins list. </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For e.g. if you are hosting your site at https://example.com, allowed_origins will look like -</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># allowed_origins = [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#     &quot;https://example.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ]</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">allowed_origins = [</span></span>
<span class="line highlighted"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;http://localhost:8080&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://localhost:8080&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;http://localhost:5173&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://localhost&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://quickretro.app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://demo.quickretro.app&quot;</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="connecting-to-redis" tabindex="-1">Connecting to Redis <a class="header-anchor" href="#connecting-to-redis" aria-label="Permalink to &quot;Connecting to Redis&quot;">​</a></h2><p>The Go app always attempts to connect to Redis when its starts. It errors out if connecting to Redis fails. The app looks for an <code>ENV</code> variable named <code>REDIS_CONNSTR</code> for the connection details.</p><p>The Redis ACL username and password can be passed as part of the url to <code>REDIS_CONNSTR</code>.</p><h2 id="enable-cloudflare-turnstile" tabindex="-1">Enable Cloudflare Turnstile <a class="header-anchor" href="#enable-cloudflare-turnstile" aria-label="Permalink to &quot;Enable Cloudflare Turnstile&quot;">​</a></h2><p>Turnstile is a smart CAPTCHA alternative from Cloudflare used to prevent bots. It is disabled by default for the Create board page.</p><p>To enable it, set the <code>TURNSTILE_ENABLED</code>, <code>TURNSTILE_SITE_KEY</code> and <code>TURNSTILE_SECRET_KEY</code> environment variables.</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">REDIS_CONNSTR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=&lt;YOUR_REDIS_CONNECTION_STRING&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TURNSTILE_ENABLED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TURNSTILE_SITE_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=&lt;YOUR_SITE_KEY&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TURNSTILE_SECRET_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=&lt;YOUR_SECRET_KEY&gt;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You need to register with Cloudflare to get <code>TURNSTILE_SITE_KEY</code> and <code>TURNSTILE_SECRET_KEY</code>. Visit <a href="https://www.cloudflare.com/en-in/application-services/products/turnstile/" target="_blank" rel="noreferrer">Cloudflare</a> for more details.</p></div>`,24)]))}const g=i(n,[["render",l]]);export{k as __pageData,g as default};
