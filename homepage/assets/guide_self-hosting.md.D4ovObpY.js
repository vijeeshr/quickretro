import{_ as s,c as i,o as a,ae as o}from"./chunks/framework.CTVYQtO4.js";const u=JSON.parse('{"title":"Self-Hosting","description":"","frontmatter":{},"headers":[],"relativePath":"guide/self-hosting.md","filePath":"guide/self-hosting.md","lastUpdated":1743150417000}'),t={name:"guide/self-hosting.md"};function r(n,e,l,c,d,p){return a(),i("div",null,e[0]||(e[0]=[o(`<h1 id="self-hosting" tabindex="-1">Self-Hosting <a class="header-anchor" href="#self-hosting" aria-label="Permalink to &quot;Self-Hosting&quot;">​</a></h1><p>Although the <a href="https://demo.quickretro.app" target="_blank" rel="noreferrer">demo app</a> has all the features and can be used as-is, it runs on low resources. The data is auto-deleted within 2 hours. It is recommended to self-host the app for better flexibility.</p><h2 id="update-allowed-origins" tabindex="-1">Update Allowed-Origins <a class="header-anchor" href="#update-allowed-origins" aria-label="Permalink to &quot;Update Allowed-Origins&quot;">​</a></h2><p>As defined in <a href="./configurations#allowed-origins">Configurations</a>, update the config setting with your site origin.</p><h2 id="secure-redis-instance" tabindex="-1">Secure Redis Instance <a class="header-anchor" href="#secure-redis-instance" aria-label="Permalink to &quot;Secure Redis Instance&quot;">​</a></h2><p>It is recommended to secure your Redis instance, preferably with ACL enabled. Check out the <code>redis</code> directory, and sample docker compose files <code>compose.yml</code>, <code>compose.reverseproxy.yml</code>, <code>compose.demohosting.yml</code> etc in <a href="https://github.com/vijeeshr/quickretro" target="_blank" rel="noreferrer">github repository</a> for more details.</p><h2 id="passing-env-variables-with-compose" tabindex="-1">Passing ENV variables with Compose <a class="header-anchor" href="#passing-env-variables-with-compose" aria-label="Permalink to &quot;Passing ENV variables with Compose&quot;">​</a></h2><p>Environment variables are passed using <code>.env</code> file which is present in the same directory as <code>compose*.yml</code> files.<br> Example: Create an env file with your values -</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;REDIS_CONNSTR=redis://redis:6379/0&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># echo &quot;MY_VAR1=false&quot; &gt;&gt; .env</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># echo &quot;MY_VAR2=true&quot; &gt;&gt; .env</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>To securely pass <code>ENV</code> vars, feel free to use an approach which suits you best.</p></div><div class="warning custom-block"><p class="custom-block-title">NOTE</p><p>DO NOT create the file directly from Windows <code>CMD</code> if you intend to run the app in Linux. It creates Unicode text, UTF-16, little-endian text, with CRLF line terminators. This causes problems for Docker Compose to read the env file.</p><p>On Windows, you can create the file in UTF-8 using Git Terminal.</p></div><h2 id="sample-compose-files" tabindex="-1">Sample Compose files <a class="header-anchor" href="#sample-compose-files" aria-label="Permalink to &quot;Sample Compose files&quot;">​</a></h2><p>Check out the sample docker compose files <code>compose.yml</code>, <code>compose.reverseproxy.yml</code>, <code>compose.demohosting.yml</code> etc in <a href="https://github.com/vijeeshr/quickretro" target="_blank" rel="noreferrer">github repository</a> for more details.</p>`,13)]))}const m=s(t,[["render",r]]);export{u as __pageData,m as default};
